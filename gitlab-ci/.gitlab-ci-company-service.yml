variables:
  POSTGRES_DB: company_test
  POSTGRES_USER: root
  POSTGRES_PASSWORD: example
  POSTGRES_PORT: 5432
  POSTGRES_HOST: postgres

company-service-test-integration:
  variables:
    NODE_ENV: test
    X_AUTH_TOKEN: wbdhAC6uTVn873E2MrU8a
  stage: test
  image: node:lts-alpine
  services:
    - postgres
  before_script:
    - cd company-service
  script:
    - npm install --quiet
    - npm run test
  environment:
    name: Production
  only:
    changes:
      - company-service/**/*

company-service-build:
    stage: build
    image: docker:latest
    services:
      - docker:dind
    before_script:
          - apk update
          - apk add --update nodejs npm
          - cd company-service
          - cat $COMPANY_SERVICE_ENV > .env
          - docker login -u "$GITLAB_REGISTRY_USERNAME" -p "$GITLAB_REGISTRY_PASSWORD" $CI_REGISTRY
    script:
        - npm install --quiet
        - npm run build
        - docker build --tag $CI_REGISTRY/pa-esgi/backend_microservices/company-service .
        - docker tag $CI_REGISTRY/pa-esgi/backend_microservices/company-service $CI_REGISTRY/pa-esgi/backend_microservices/company-service:latest
        - docker push $CI_REGISTRY/pa-esgi/backend_microservices/company-service:latest
    environment:
        name: Production
    only:
        changes:
        - company-service/**/*

company-service-deploy:
  stage: deploy
  image: lwolf/helm-kubectl-docker:latest
  environment:
    name: Production
  before_script:
    - mkdir ~/.kube/
    - echo $KUBECONFIG_OVH | base64 -d > config
    - mv config ~/.kube/
    - kubectl get namespace
    - ls -all
  script:
    - helm upgrade --set service.companyService.image=$CI_REGISTRY/pa-esgi/backend_microservices/company-service:latest --install --values=deploy/company-service/values.yaml company-service deploy/company-service
  only:
    changes:
      - company-service/**/*
